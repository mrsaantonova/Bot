from loader import bot
from telebot.types import CallbackQuery
from loguru import logger
from database.hotels_db import User
from keyboards.inline.all_keyboards import delete_history


@logger.catch
@bot.callback_query_handler(func=lambda call: call.data.startswith('last'))
def callback_history(callback_query: CallbackQuery) -> None:
    """–ö–æ–ª–±—ç–∫-—Ö—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –≤—ã–±–æ—Ä –ø–æ–∫–∞–∑–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    limit_cnt = 0

    if User.get_or_none(userID=callback_query.from_user.id):

        if callback_query.data.endswith('five'):
            limit = 5

        else:
            limit = 1

        for i_user in reversed(User.select()):

            if limit_cnt == limit:
                break

            if callback_query.from_user.id == i_user.userID:

                info_user = '\n'.join(['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ' + i_user.name,
                                       '–ö–æ–º–∞–Ω–¥–∞: /' + i_user.command,
                                       '–í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: ' + f'<i>{i_user.time}</i>'])
                bot.send_message(callback_query.from_user.id, info_user, parse_mode='html')

                if i_user.command == 'lowprice':

                    for i_hotel in i_user.hotels_lp:
                        if i_hotel.owner_id == i_user.id:
                            info_hotel = '\n'.join(['–ì–æ—Ä–æ–¥: ' + i_hotel.city,
                                                    '–û—Ç–µ–ª—å: ' + f'<b>{i_hotel.name}</b>',
                                                    '–¶–µ–Ω–∞: ' + f'<i>{i_hotel.price}</i>'])
                            bot.send_message(callback_query.from_user.id, info_hotel, parse_mode='html')

                    else:
                        bot.send_message(callback_query.from_user.id, '_' * 35)
                        limit_cnt += 1

                elif i_user.command == 'highprice':
                    for i_hotel in i_user.hotels_hp:
                        if i_hotel.owner_id == i_user.id:
                            info_hotel = '\n'.join(['–ì–æ—Ä–æ–¥: ' + i_hotel.city,
                                                    '–û—Ç–µ–ª—å: ' + f'<b>{i_hotel.name}</b>',
                                                    '–¶–µ–Ω–∞: ' + f'<i>{i_hotel.price}</i>'])
                            bot.send_message(callback_query.from_user.id, info_hotel, parse_mode='html')

                    else:
                        bot.send_message(callback_query.from_user.id, '_' * 35)
                        limit_cnt += 1

                else:
                    for i_hotel in i_user.hotels_bd:
                        if i_hotel.owner_id == i_user.id:
                            info_hotel = '\n'.join(['–ì–æ—Ä–æ–¥: ' + i_hotel.city,
                                                    '–û—Ç–µ–ª—å: ' + f'<b>{i_hotel.name}</b>',
                                                    '–¶–µ–Ω–∞: ' + f'<i>{i_hotel.price}</i>',
                                                    '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: ' + f'<i>{i_hotel.distance} –∫–º</i>'])
                            bot.send_message(callback_query.from_user.id, info_hotel, parse_mode='html')

                    else:
                        bot.send_message(callback_query.from_user.id, '_' * 35)
                        limit_cnt += 1

        bot.send_message(callback_query.from_user.id, '–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤? üöÆ',
                         reply_markup=delete_history())

    else:
        bot.send_message(callback_query.from_user.id, '–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ ü§∑')


@logger.catch
@bot.callback_query_handler(func=lambda call: call.data == 'delete')
def callback_delete_history(callback_query: CallbackQuery) -> None:
    """–ö–æ–ª–±—ç–∫-—Ö—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    inline-–∫–Ω–æ–ø–∫–∞ '–î–∞, –æ—á–∏—Å—Ç–∏—Ç—å'
    """
    for i_user in User.select():
        if callback_query.from_user.id == i_user.userID:

            for i_hotel in i_user.hotels_lp:
                if i_hotel.owner_id == i_user.id:
                    i_hotel.delete_instance()

            for i_hotel in i_user.hotels_hp:
                if i_hotel.owner_id == i_user.id:
                    i_hotel.delete_instance()

            for i_hotel in i_user.hotels_bd:
                if i_hotel.owner_id == i_user.id:
                    i_hotel.delete_instance()

            i_user.delete_instance()
    else:
        bot.send_message(callback_query.from_user.id, '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞! ‚úÖ')

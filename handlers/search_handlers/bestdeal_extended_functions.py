from loader import bot
from telebot.types import Message
from states.hotel_information import BestDealState
from random import choice


@bot.message_handler(state=BestDealState.price_min)
def get_price_min(message: Message) -> None:
    """
    –•—ç–Ω–¥–ª–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞.
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
    """
    if message.text.isdigit() and int(message.text) > 0:
        bot.set_state(message.from_user.id, BestDealState.price_max, message.chat.id)
        bot.send_message(message.from_user.id, choice(['–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É {$}',
                                                       '–ê —Å–µ–π—á–∞—Å –Ω—É–∂–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ ($)',
                                                       '–¢–µ–ø–µ—Ä—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ ($)']))
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['price_min'] = int(message.text)
    else:
        bot.send_message(message.from_user.id, choice(['–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø—Ä–∏—á—ë–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º...\n'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                                                       '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ - —ç—Ç–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ\n'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
                                                       '–ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤...'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ']))


@bot.message_handler(state=BestDealState.price_max)
def get_price_min(message: Message) -> None:
    """
    –•—ç–Ω–¥–ª–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞.
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
    """
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        price_min = data['price_min']

    if message.text.isdigit() and int(message.text) > price_min:
        bot.set_state(message.from_user.id, BestDealState.distance, message.chat.id)
        bot.send_message(message.from_user.id, choice(['–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –≥–æ—Ä–æ–¥–∞ (–∫–º)',
                                                       '–¢–µ–ø–µ—Ä—å –º–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å -\n'
                                                       '–ö–∞–∫–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –≤–∞—Å —É—Å—Ç—Ä–æ–∏—Ç? (–∫–º)',
                                                       '–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –≥–æ—Ä–æ–¥–∞ (–∫–º)']))
        data['price_max'] = int(message.text)
    else:
        bot.send_message(message.from_user.id, '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º?\n'
                                               '–ê —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µüßê -\n'
                                               '–ù–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π\n'
                                               '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')


@bot.message_handler(state=BestDealState.distance)
def get_distance(message: Message) -> None:
    """
    –•—ç–Ω–¥–ª–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ /bestdeal
    """
    if message.text.isdigit() and int(message.text) > 0:
        bot.set_state(message.from_user.id, BestDealState.info_best_deal)
        bot.send_message(message.from_user.id, choice(['–ö–ª–∞—Å—Å–Ω–æ, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ —É –Ω–∞—Å –µ—Å—Ç—å!\n'
                                                       '–í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?',
                                                       '–£—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—Ç–∏–ª —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ!\n'
                                                       '–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?',
                                                       '–û—Ç–ª–∏—á–Ω–æ, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!\n'
                                                       '–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?']))
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['distance'] = int(message.text)
    else:
        bot.send_message(message.from_user.id, choice(['–ü—Ä–∏–º—É —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ...',
                                                       '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ - —ç—Ç–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ',
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ']))
import requests
from loader import bot
from telebot.types import Message
from states.hotel_information import BestDealState
from utils.api_requests.hotels_request import post_hotels_request
from utils.api_requests.detail_request import post_detail_request
from random import choice
from keyboards.inline.all_keyboards import row_address_and_on_map
from loguru import logger
from database.hotels_db import HotelBestDeal


@logger.catch
@bot.message_handler(state=BestDealState.info_best_deal)
def info_best_deal(message: Message) -> None:
    """
    –•—ç–Ω–¥–ª–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ /bestdeal.
    –ö–æ–Ω–µ—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /bestdeal
    """
    if message.text == '–î–∞':

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:

            if data['need_photo']:
                full_info = f"–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!\n–í–∞—à –∑–∞–ø—Ä–æ—Å:\n" \
                            f'<b>"–õ—É—á—à–∏–µ –ø–æ —Ü–µ–Ω–µ –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é"</b>\n' \
                            f"–ì–æ—Ä–æ–¥: {data['city']}\n" \
                            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π: {data['hotel_amt']}\n" \
                            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {data['photo_amt']}\n" \
                            f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {data['price_min']}$\n" \
                            f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {data['price_max']}$\n" \
                            f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {data['distance']} –∫–º"

            else:
                full_info = f"–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ!\n–í–∞—à –∑–∞–ø—Ä–æ—Å:\n" \
                            f'<b>"–õ—É—á—à–∏–µ –ø–æ —Ü–µ–Ω–µ –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é"</b>\n' \
                            f"–ì–æ—Ä–æ–¥: {data['city']}\n" \
                            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π: {data['hotel_amt']}\n" \
                            f"–ë–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n" \
                            f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {data['price_min']}$\n" \
                            f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {data['price_max']}$\n" \
                            f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {data['distance']} –∫–º"

        bot.send_message(message.from_user.id, full_info, parse_mode='html')
        bot.send_message(message.from_user.id, choice(['–û–∂–∏–¥–∞–π—Ç–µ...',
                                                       '–ú–æ–∂–Ω–æ üí§? –ñ–¥—ë–º...',
                                                       '–¢–∏–∫-—Ç–∞–∫ ‚åõ –û–∂–∏–¥–∞–µ–º...',
                                                       '–ù–∞–¥–µ—é—Å—å –º–æ—è üîã –Ω–µ —Å—è–¥–µ—Ç...\n'
                                                       '–®—É—á—Éüòâ –ü—Ä–æ—Å—Ç–æ —á—É—Ç–æ–∫ –ø–æ–¥–æ–∂–¥–µ–º...',
                                                       '–í–æ–∑—å–º–∏—Ç–µ –ø–æ–∫–∞ —á—Ç–æ üéß\n'
                                                       '–ò –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–µ–º...']))

        offers = post_hotels_request(data['cityID'],
                                     data['hotel_amt'],
                                     'DISTANCE',
                                     price_min=data['price_min'],
                                     price_max=data['price_max'],
                                     distance=data['distance'])

        sort_offers = sorted(offers.items(), key=lambda val: int(val[1][1][1:]))
        owner = data['user_best']

        if offers and not data['need_photo']:
            bot.send_message(message.from_user.id, choice(['–ü–æ–¥–æ–±—Ä–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:',
                                                           '–ß—Ç–æ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–æ–±—Ä–∞—Ç—å:',
                                                           '–ü–æ–¥–æ–±—Ä–∞–ª —Å–ª–µ–¥—É—é—â–µ–µ:']))
            count = 1

            for i_info in sort_offers:

                bot.send_message(message.from_user.id,
                                 f'{count}. <b>{i_info[1][0]}</b>\n'
                                 f'<i>–¶–µ–Ω–∞: {i_info[1][1]}</i>\n'
                                 f'<i>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {i_info[1][2]} –∫–º</i>',
                                 reply_markup=row_address_and_on_map(i_info[0]),
                                 parse_mode='html')
                HotelBestDeal.create(owner=owner,
                                     city=data['city'],
                                     name=i_info[1][0],
                                     price=i_info[1][1],
                                     distance=i_info[1][2])
                count += 1
            else:
                bot.delete_state(message.from_user.id, message.chat.id)

        elif offers and data['need_photo']:
            count = 1

            for i_offer in sort_offers:
                offer_with_photo = post_detail_request(i_offer[0], data['photo_amt'])

                bot.send_message(message.from_user.id,
                                 f'{count}. <b>{i_offer[1][0]}</b>\n'
                                 f'<i>–¶–µ–Ω–∞: {i_offer[1][1]}</i>\n'
                                 f'<i>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {i_offer[1][2]} –∫–º</i>',
                                 reply_markup=row_address_and_on_map(i_offer[0]),
                                 parse_mode='html')
                HotelBestDeal.create(owner=owner,
                                     city=data['city'],
                                     name=i_offer[1][0],
                                     price=i_offer[1][1],
                                     distance=i_offer[1][2])
                count += 1

                for i_name, i_lst in offer_with_photo.items():
                    if i_name not in ('address', 'static_img'):
                        for i_dct in i_lst:
                            for i_url, i_desc in i_dct.items():
                                photo_file = requests.get(i_url)
                                bot.send_photo(message.from_user.id,
                                               photo_file.url,
                                               caption=f'{i_desc}')
            else:
                bot.delete_state(message.from_user.id, message.chat.id)

        else:
            bot.send_message(message.from_user.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –Ω–∞—à–µ–ª –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤üòî\n'
                                                   '–õ–∏–±–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ‚ö†\n'
                                                   '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥')

    else:
        bot.send_message(message.from_user.id, choice(['–°–∫–∞–∂–∏—Ç–µ –∂–µ –º–Ω–µ "–î–∞"',
                                                       '–ù—É –ø—Ä–æ—à—É –í–∞—Å üôè\n'
                                                       '–í–≤–µ–¥–∏—Ç–µ "–î–∞"',
                                                       '–¢–∞–∫ —Ö–æ—á–µ—Ç—Å—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–πüò©\n'
                                                       '–ñ–¥—É –í–∞—à–µ "–î–∞"',
                                                       '"–î–∞"ü•±',
                                                       '–Ø —Ç–∞–∫ —Ö–æ—á—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π...\n'
                                                       '–ê —É –º–µ–Ω—è ü§ê\n'
                                                       '–ù–∞–ø–∏—à–∏—Ç–µ "–î–∞"']))